강의 21일차


1장. 데이터베이스 기본 개념

º 데이터베이스의 필요성
º 데이터베이스의 정의와 특성

데이터와 정보
-데이터(data)
   현실 세계에서 단순히 관찰하거나 측정해 수집한 사실이나 값
-정보(information)
   의사 결정에 유용하게 활용할 수 있도록 데이터를 처리한 결과물

정보처리(information processing)
  데이터에서 정보를 추출하는 과정 또는 방법

정보 시스템과 데이터베이스
정보시스템( information systme)
조직 운영에 필요한 데이터를 수집하여 저장해두었다가 필요할 때 유용한 정보를 만들어 주는 수단.

데이터베이스
정보 시스템 안에서 데이터를 저장하고 있다가 필요할 때 제공하는 역할을 담당.

* 현실세계에 있는 정보들을 데이터로 만듦.
  데이터를 데이터베이스에 저장.
  처리라는 작업을 통해서 정보를 추출하는 작업을 해야한다.


데이터베이스(DB: DataBase)
특정 조직의 여러 사용자가 공유하여 사용할 수 있도록 통합해서 저장한 운영 데이터의 집합

데이터베이스의 정의 - 통합 데이터(integrated date)
		  - 공유 데이터(shared date)
		  - 저장 데이터(stored data)
		  - 운영 데이터(operational data)


공유 데이터
  특정 조직의 여러 사용자가 함꼐 소유하고 이용할 수 있는 공용 데이터
통합 데이터
  최소의 중복과 통제 가능한 중복만 허용하는 데이터
저장 데이터 
  컴퓨터가 접근할 수 있는 매체에 저장된 데이터
운영 데이터
  조직의 주요 기능을 수행하기 위해 지속적으로 꼭 필요한 데이터


데이터베이스 특징
- 실시간 접근 (real-time accessibility) : 사용자의 데이터 요구에 실시간으로 응답
- 계속 변화 (continuous evolution) : 데이터의 계속적인 삽입, 삭제, 수정을 통해 현재의 정확한 데이터를 유지
- 내용 기반 참조 (contents reference) : 데이터가 저장된 주소나 위치가 아닌 내용으로 참조
- 동시 공유 (concurrent sharing) : 서로 다른 데이터의 동시 사용뿐만 아니라 같은 데이터의 동시 사용도 지원



데이터
  - 값
정보
  - 데이터(값을) 처리하여 추출한 의미있는 값들
정보처리
  - 값을 정보로 만들기 위한 수단 또는 과정
데이터베이스
  - 값들의 집합




2장 데이터베이스 관리 시스템

파일시스템(file system)
 - 데이터를 파일로 관리하기 위해 파일을 생성. 삭제. 수정 .검색하는 기능을 제공하는 소프트웨어.
 - 응용 프로그램마다 필요한 데이터를 별도의 파일로 관리함.

파일 시스템의 문제점
-같은 내용의 데이터가 여러 파일에 중복 저장된다.
-응용 프로그램이 데이터 파일에 종속적이다.
-데이터 파일에 대한 동시 공유,보안,회복 기능이 부족하다.
-응용 프로그램 개발이 쉽지 않다.

데이터베이스 관리 시스템
-DBMS(DataBase Management System)
-파일 시스템의 문제를 해결하기 위해 제시된 소프트웨어
-조직에 필요한 데이터를 데이터 베이스에 통합하여 저장하고 관리함

* 하나의 DBMS가 데이터 베이스에서 공유한 내용을 가지고 같이 관리,공유
  

데이터베이스 관리 시스템의 주요 기능
정의 기능 : 데이터베이스 구조를 정의하거나 수정할 수 있다.
조작 기능 : 데이터를 삽입,삭제,수정,검색하는 연산을 할 수 있다. ☆
제어 기능 : 데이터를 항상 정확하고 안전하게 유지할 수 있다.

장점 
데이터 중복을 통제할 수 있다. 
데이터 독립성이 확보된다.
데이터를 동시 공유할 수 있다.
데이터 보안이 향상된다.
데이터 무결성을 유지할 수 있다.   *무결성 = 데이터가 일관성이 있어야 한다. 
표준화할 수 있다.
장애 발생시 회복이 가능하다.
응용 프로그램 개발 비용이 줄어든다.

단점
비용이 많이 든다.
백업과 회복 방법이 복잡하다.
중앙 집중 관리로 인한 취약점이 존재한다.


3장 데이터베이스 시스템

데이터베이스 시스템(DBS : DataBase System)
데이터베이스에 데이터를 저장하고, 이를 관리하여 조직에 필요한 정보를 생성해주는 시스템

스키마와 인스턴스
스키마(schema) : 데이터베이스에 저장되는 데이터 구조와 제약조건을 정의한 것
인스턴스 (instance) : 스키마에 따라 데이터베이스에 실제로 저장된 값.


데이터 사전(data dictionary)
- 시스템 카타로그(system catalog)라고도 함
- 데이터베이스에 저장되는 데이터에 관한 정보, 즉 메타 데이터를 유지하는 시스템 데이터베이스
   * 메타 데이터(meta data) : 데이터에 대한 데이터
- 스키마, 사상정보, 다양한 제약조건 등을 저장
- 데이터베이스 관리 시스템이 스스로 생성하고 유지함
- 일반 사용자도 접근이 가능하지만 저장된 데이터를 수정,삭제할 수는 없다.

데이터 디렉토리(data directory)
 - 데이터 사전에 있는 데이터에 실제로 접근하는 데 필요한 위치 정보를 저장하는 시스템 데이터베이스
 - 일반 사용자의 접근은 허용되지 않음

사용자 데이터베이스 (user database)
- 사용자가 실제로 이용하는 데이터가 저장되어 있는 일반 데이터베이스 


데이터베이스 사용자
- 데이터베이스를 이용하기 위해 접근하는 모든 사람
- 이용 목적에 따라 데이터베이스 관리자, 최종 사용자, 응용 프로그래머로 구분

데이터 언어
- 사용자와 데이터베이스 관리 시스템 간의 통신 수단.
- 사용 목적에 따라 데이터 정의어, 데이터 조작어, 데이터 제어어로 구분.
DDL : 스키마를 정의하거나, 수정 또는 삭제하기 위해서 사용한다.
DML : 데이터의 삽입,삭제,수정,검색 등의 처리를 요구하기 위해서 사용한다.
DCL : 내부적으로 필요한 규칙이나 기법을 정의하기 위해서 사용한다.

데이터베이스 관리 시스템의 구성

데이터 베이스 관리자 - 데이터 정의어 - DDL 컴파일러
최종 사용자 - 데이터 조작어 - DML컴파일러
응용 프로그래머 - 응용 프로그램 - DML 프리 컴파일러


4장 데이터 모델링 ☆

데이터 모델링과 데이터 모델의 개념
개체-관계 모델
논리적 데이터 모델


데이터 모델링
- 현실 세계에 존재하는 데이터를 컴퓨터 세계의 데이터베이스로 옮기는 변환과정
- 데이터 베이스 설계의 핵심 과정

2단계 데이터 모델링
- 개념적 데이터 모델링(conceptual modeling)
    현실 세계의 중요 데이터를 추출하여 개념 세계로 옮기는 작업
- 논리적 데이터 모델링(logical modeling)
    개념 세계의 데이터를 데이터베이스에 저장하는 구조로 표현하는 작업

개체-관계 모델(E-R model ; Entity-Relationship model)
피터 첸(peter chen)이 제안한 개념적 데이터 모델
개체와 개체 간의 관계를 이용해 현실 세계를 개념적 구조로 표현
핵심 요소 : 개체,속성,관계

개체-관계 다이어그램
E-R다이어그램


개체(Entity)
  현실 세계에서 조직을 운영하는 데 꼭 필요한 사람이나 사물과 같이 구별되는 모든 것
  저장할 가치가 있는 중요 데이터를 가지고 있는 사람이나 사물, 개념, 사건 등
  다른 개체와 구별되는 이름을 가지고 있고, 각 개체만의 고유한 특성이나 상태, 즉 속성을 하나 이상 가지고 있음.
   예 ) 서점에 필요한 개체 : 고객, 책
   예 ) 학교에 필요한 개체 : 학과,과목
  파일 구조의 레코드와 대응됨
  E-R 다이어그램에서 사각형으로 표현하고 사각형 안에 이름을 표기

속성(attribute)
  개체나 관계가 가지고 있는 고유의 특성
  의미 있는 데이터의 가장 작은 논리적 다위
  파일 구조의 필드(field)와 대응됨 
  E-R 다이어그램에서 타원으로 표현하고 타원 안에 이름을 표기

개체타입(entity type)
  개체를 고유의 이름과 속성들로 정의한 것
  파일 구조의 레코드 타입(record type)에 대응됨

개체인스턴스(entity instance)
  개체를 구성하고 있는 속성이 실제 값을 가짐으로써 실체화된 개체
  개체 어커런스라고도 함.

개체 집합(entity set)
  특정 개체 타입에 대한 개체 인스턴스들을 모아놓은 것


단일 값 속성과 다중 값 속성
  단일 값 속성
      값을 하나만 가질 수 있는 속성
 	 예 ) 고객 개체의 이름, 적립금 속성

  다중 값 속성
      값을 여러 개 가질 수 있는 속성
	예) 고객 개체의 연락처 속성
	예) 책 개체의 저자 속성
      E-R 다이어그램에서 이중 타원으로 표현


단순 속성과 복합 속성
  단순 속성
      의미를 더는 분해할 수 없는 속성
 	예) 고객 개체의 적립금 속성
 	예) 책 개체의 이름, ISBN, 가격 속성
   복합 속성
      의미를 분해할 수 있는 속성
 	예) 고객 개체의 주소 속성
		- 도,시,동, 우편번호 등으로 의미를 세분화할 수 있음
	예) 고객 개체의 생년월일 속성
 		- 연,월,일로 의미를 세분화할 수 있음


유도 속성
   기존의 다른 속성의 값에서 유도되어 결정되는 속성
   값이 별도로 저장되지 않음
	예 ) 책 개체의 가격과 할인율 속성으로 계산되는 판매가격 속성
	예 ) 고객 개체의 출생연도 속성으로 계산되는 나이 속성
   E-R 다이어그램에서 점선 타원으로 표현


널 속성(null attribute)
  널 값이 허용되는 속성

널 값 
  아직 결정되지 않거나 모르는 값 또는 존재하지 않는 값
  공백이나 0과는 의미가 다름
  	예 ) 등급 속성이 널 값 -> 등급이 아직 결정되지 않았음을 의미

키 속성
  각 개체 인스턴스를 식별하는 데 사용되는 속성
  모든 개체 인스턴스의 키 속성 값이 다름.
  둘 이상의 속성들로 구성되기도 함
   	예 ) 고객 개체의 고객 아이디 속성
  E-R 다이어그램에서 밑줄로 표현


관계
  개체와 개체가 맺고 있는 의미 있는 연관성
  개체 집합들 사이의 대응 관계, 즉 매핑을 의미
  	예) 고객 개체와 책 개체 간의 구매 관계
  	"고객은 책을 구매한다."
  E-R 다이어그램에서 마름모로 표현


개체-관계 모델

일대일 관계
개체A의 각 개체 인스턴스가 개체 B의 개체 인스턴스 하나와 관계를 맺을 수 있고,
개체B의 각 개체 인스턴스도 개체A의 개체 인스턴스 하나와 관계를 맺을 수 있음.

일대다 관계
개체A의 각 개체 인스턴스가 개체B의 개체 인스턴스 여러 개와 관계를 맺을 수 있지만, 
개체 B의 각 개체 인스턴스는 개체 A의 개체 인스턴스 하나와 관계를 맺을 수 있음.

다대다 관계
개체A의 각 개체 인스턴스가 개체 B의 개체 인스턴스 여러 개와 관계를 맺을 수 있고,
개체B의 각 개체 인스턴스도 개체A의 개체 인스턴스 여러 개와 관계를 맺을 수 있음.


관계의 참여 특성
 필수적 참여(전체 참여)
 선택적 참여(부분 참여)


관계의 종속성
 -약한 개체(weak entity)
   다른 개체의 존재 여부에 의존적인 개체
 -오너 개체(owner entity)
   다른 개체의 존재 여부를 결정하는 개체
 -오너 개체와 약한 개체는 일반적으로 일대다의 관계를 가지고, 
  약한 개체는 오너 개체와의 관계에서 필수 적으로 참여하는 특징이 있음.
 -약한 개체는 오너 개체의 키를 포함하여 키를 구성하는 특징이 있음.
 -E-R다이어그램에서 약한 개체는 이중 사각형으로 표현하고 
  약한 개체가 오너 개체와 맺는 관계는 이중 마름모로 표현

개체-관계 다이어그램
사각형 : 개체를 표현
마름모 : 관계를 표현
타원 : 속성을 표현
링크(연결선) : 각 요소를 연결


5장 관계 데이터 모델의 개념

키(key)
 릴레이션에서 튜플들을 유일하게 구별하는 속성 또는 속성들의 집합

기본키(primary key)
대체키(alternate key) 
외래키(foreign key)
수퍼키 (super key)
후보키(candidate key)


키의 특성

유일성(uniqueness) : 하나의 릴레이션에서 모든 투플은 서로 다른 키 값을 가져야 함.
최소성(minimality) : 꼭 필요한 최소한의 속성들로만 키를 구성.


키의 종류

슈퍼키 
  유일성을 만족하는 속성 또는 속성들의 집합
 	예) 고객 릴레이션의 슈퍼키 : 고객아이디,(고객아이디,고객이름), (고객이름,주소)등
후보키
  유일성과 최소성을 만족하는 속성 또는 속성들의 집합
  	예 ) 고객 릴레이션의 후보키 : 고객아이디,(고객이름,주소) 등
기본키 ☆
  후보키 중에서 기본적으로 사용하기 위해 선택한 키
	예 ) 고객 릴레이션의 기본키 : 고객아이디  

대체키
  기본키로 선택되지 못한 후보키
	예) 고객 릴레이션의 대체키 : (고객이름, 주소)


릴레이션 = 테이블
도메인 = 값들이 가질 수 있는 범위



수강신청하는 포탈을 위한 ERD

- 대학생은 아이디, 비밀번호, 이름, 주민번호, 학과, 학생구분, 이메일, 폰번호, 주소, 학번으로 이루어져 있다. 
- 대학생은 아이디, 학번, 주민번호를 이용하여 구별할 수 있다. (후보키) 
- 대학생은 학번이 중요하기 때문에 학번을 이용하여 구별한다.(기본키)
대학생(개체) 
 - 속성 : 아이디, 비밀번호, 이름, 주민번호, 학과, 학생구분, 이메일, 폰번호, 주소, 학번


- 강의는 강의코드, 강의명, 강의교수, 강의일정, 학점, 시간표, 정원, 이수구분, 분반으로 이루어져있다.
강의(개체)
  - 속성 : 강의코드, 강의명, 강의교수, 강의일정, 학점, 시간표, 정원, 이수구분, 분반

- 대학생은 강의를 수강한다.
수강(관계)
- 속성 : 수강번호, 강의코드,학번

한명의 대학생은 여러 강의를 수강할 수 있다.(1:N)
한 강의에는 여러 대학생이 강의를 듣는다.(1:M)
=> N:M 관계

- 교수는 교수번호, 이름, 아이디, 비밀번호, 주민번호, 학과, 학사졸업학교, 석사졸업학교, 이메일, 핸드폰번호,
  주소, 박사 졸업학교로 이루어져있다. 
교수(개체)
속성 : 교수번호, 이름, 아이디, 비밀번호, 주민번호, 학과, 학사졸업학교, 석사졸업학교, 이메일, 핸드폰번호,
        주소, 박사 졸업학교

- 교수는 강의를 강의 지도한다.
강의지도(관계)
- 교수번호,강의코드


수강(관계)에서 후보키는?
- 수강번호, (학번,강의코드)
(강의코드) : 해당 강의를 듣는 모든 학생들
(학번) : 해당 학번 학생이 듣는 모든 강의들
(학번, 강의코드) : 해당 강의를 듣는 해당 학번 학생
(수강번호) : 해당 수강번호와 일치하는 강의와 학생
수강(관계)에서 기본키는?
- 수강번호
수강(관계)에서 외래키는?
- 학번, 강의코드
강의지도(관계)에서 후보키는?
-강의코드, (강의코드,교수번호)
(강의코드) : 해당 강의코드를 강의지도하는 교수님들
	(요구사항에 따라 교수님들이 될 수 있고, 교수님이 될 수 있다.)
	한 강의는 무조건 한 교수님만 수업한다 => 교수님
	한 강의를 여러 교수님이 나누어서 수업할 수 있다. => 교수님들
(교수번호) : 해당 교수번호와 일치하는 교수님이 강의지도하는 강의들. 
(강의코드,교수번호) : 해당 강의를 강의지도하는 교수님들 중에서 교수번호와 일치하는 교수님.
강의지도(관계)에서 기본키는?
- (강의코드,교수번호)
강의지도(관계)에서 외래키는?
-강의코드, 교수번호


외래키의 식별관계
- 릴레이션의 기본키가 외래키로 구성된 경우

외래키의 비식별관계
- 릴레이션의 기본키가 외래키가 아닌 경우(수강처럼)





서점에서 도서를 관리하는 사이트를 만들려고 합니다.
이 때 필요한 개체와 관계를 ERD로 나타내세요.
- 요구사항 명세서 작성x, ERD만 작성


도서는 도서명, 저자, 출판사명, 가격, 출간일, 도서분류 코드로 이루어져있다.
도서는 도서명,도서분류 코드로 구별할 수 있다. (후보키)
도서는 도서분류코드가 중요하기 때문에 도서분류 코드를 통해 구별한다.(기본키)

도서(개체)
 - 속성 : 도서명, 저자, 출판사명, 가격, 출간일, 도서분류 코드

서점은 도서를 관리한다.

관리(관계)
 - 속성 : 수량, 도서분류코드

서점은 서점명, 주소, 전화번호, 사업자명으로 이루어져있다.

서점(개체)
 - 속성 : 서점명, 주소, 전화번호, 사업자명

하나의 도서는 여러 서점에서 판매된다.(1:n)
한 서점에서는 여러 도서들이 판매된다.(1:m)
n:m

소비자(개체)
  - 속성 : 이름, 카드번호, 주문번호, 전화번호, 회원번호

소비자는 도서를 구매한다.

구매(관계)
  - 속성 : 카드번호, 주문번호, 도서분류코드




책,도서(개체)
 - ISBN, 도서명, 출판년도, 저자(저자의 경우 개체로 만들 수 있다.)로 이루어져있다.

회원(개체)
 - 아이디, 비밀번호, 전화번호, 주소, 이름, 주민번호 등으로 이루어져있다. 

회원은 도서를 구매한다.
구매(관계)
 - 구매번호, ISBN, 아이디, 구매일(시간포함), 수량
       1       001     A       2021-05-26  15:13  2
       2       001     A       2021-05-26  16:13  2
A라는 회원이 같은 시간에 도서A를 2권 구매했다. 
1시간 뒤에 A라는 회원이 도서A를 1권 구매했다.


출판사(개체)
 - 출판사는 사업자등록번호, 출판사명, 위치, 대표명 등으로 이루어져있다. 

 - 출판사는 도서를 출판한다.
출판(관계)
 - 출판번호, 출판사명, ISBN



의류 쇼핑몰을 관리하는 사이트를 만드려고 한다.
이 때 필요한 개체와 관계를 ERD로 표현하세요.


쇼핑몰(개체)
 - 속성 : 사업자번호, 대표명, 쇼핑몰명, 주소, 전화번호

의류(개체)
 - 속성 : 상품명, 상품번호, 브랜드명

쇼핑몰은 의류를 관리한다.

관리(관계)
 - 속성 : 상품번호, 재고량, 상품명

제조사는 쇼핑몰에 판매한다.

제조사(개체)
 - 속성 : 제조사코드, 제조사명, 전화번호

판매(관계)
 - 속성 : 판매일, 주문번호, 재고, 구매자명

회원은 의류를 구매한다.



A회사의 의류 쇼핑몰
예) 나이키의 의류 쇼핑몰

쿠팡같은 의류 쇼핑몰

- 쿠팡 같이 다양한 회사에서 판매하는 의류 쇼핑몰.
- 회원만 구매 가능한 쇼핑몰.
- 배송 주소는 구매할때마다 입력

의류(개체)
 - [의류 번호], 의류명, 타입(상/하의, 속옷/겉옷), 가격, 사이즈, 성별

회원(개체)
 - [아이디], 비밀번호, 주민번호, 이름, 주소, 전화번호, 이메일 등

회사(개체)
 - 회사코드, 회사명, 사업자등록번호, 대표자명, 회사주소, 대표번호

회원은 의류를 구매한다.
구매(관계)
 - 구매번호, 아이디, 의류번호, 수량,배송지

회사는 의류를 납품
납품(관계)
 - 납품번호, 의류번호, 회사코드, 수량
