<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.portfolio.dao.MemberDAO">
	<select id="getMember" resultType="kr.green.portfolio.vo.MemberVO">
		select * from member where me_id = #{me_id}
	</select>
	<insert id="insertMember">
		insert into member(me_id, me_nickname, me_password, me_gender, me_birth, me_phone, me_address, me_name, me_resident_num, me_email, me_jAddress) 
			values(#{me_id}, #{me_nickname}, #{me_password}, #{me_gender}, #{me_birth}, #{me_phone}, #{me_address}, #{me_name}, #{me_resident_num}, #{me_email}, #{me_jAddress})
	</insert>
	<select id="selectUser" resultType="kr.green.portfolio.vo.MemberVO">
		select * from member where me_id = #{me_id}
	</select>
	<update id="keepLogin">
		update member set 
			me_session_id = #{me_session_id},
			me_session_limit = #{me_session_limit}
			where me_id = #{me_id}
	</update>
	<select id="selectUserBySession" resultType = "kr.green.portfolio.vo.MemberVO">
		select * from member
			where me_session_id = #{me_session_id} and me_session_limit > now()
	</select>
	<update id="updateMember">
		update member set 
			me_password = #{me_password},
			me_gender = #{me_gender},
			me_email = #{me_email},
			me_address = #{me_address},
			me_jAddress = #{me_jAddress},
			me_nickname = #{me_nickname},
			me_birth = #{me_birth},
			me_phone = #{me_phone}
				where me_id = #{me_id}
	</update>
	<insert id="pubRegister">
		insert into publisher(pu_name, pu_phone, pu_ceo)
			values(#{pu_name}, #{pu_phone}, #{pu_ceo})
	</insert>
	<select id="getPublisherList" resultType = "kr.green.portfolio.vo.PublisherVO">
		select * from publisher
			<if test="cri.type==0">
				where (pu_num like concat('%',#{cri.search},'%')
				or pu_name like concat('%',#{cri.search},'%')
				or pu_phone like concat('%',#{cri.search},'%')
				or pu_ceo like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type==1">
				where pu_name like concat('%',#{cri.search},'%')
			</if>
			limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getPublisher" resultType = "kr.green.portfolio.vo.PublisherVO">
		select * from publisher where pu_num = #{pu_num}
	</select>
	<insert id="authRegister">
		insert into author (au_num, au_writer, au_country, au_title, au_contents, au_birth)
			values(#{au_num}, #{au_writer}, #{au_country}, #{au_title}, #{au_contents}, #{au_birth})
	</insert>
	<select id="getTotalCount" resultType="int">
		select count(*) from publisher
	</select>
	<select id="getAuthorList" resultType = "kr.green.portfolio.vo.AuthorVO">
		select * from author
			<if test="cri.type==0">
				where (au_num like concat('%',#{cri.search},'%')
				or au_writer like concat('%',#{cri.search},'%')
				or au_country like concat('%',#{cri.search},'%')
				or au_title like concat('%',#{cri.search},'%')
				or au_contents like concat('%',#{cri.search},'%')
				or au_birth like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type==1">
				where (au_title like concat('%',#{cri.search},'%')
				or au_contents like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type==2">
				where au_writer like concat('%',#{cri.search},'%')
			</if>
			limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getAuthor" resultType="kr.green.portfolio.vo.AuthorVO">
		select * from author where au_num = #{au_num}
	</select>
	<update id="updatePub">
		update publisher set
			pu_num = #{pu_num},
			pu_name = #{pu_name},
			pu_phone = #{pu_phone},
			pu_ceo = #{pu_ceo}
			where pu_num = #{pu_num}
	</update>
	<update id="updateAuth">
		update author set
			au_num = #{au_num},
			au_writer = #{au_writer},
			au_country = #{au_country},
			au_title = #{au_title},
			au_contents = #{au_contents},
			au_birth = #{au_birth}
				where au_num = #{au_num}
	</update>
</mapper>

