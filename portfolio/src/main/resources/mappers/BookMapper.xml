<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.portfolio.dao.BookDAO">
	<select id="getBookList" resultType="kr.green.portfolio.vo.BookVO">
		select * from book
			<if test="cri.type==0">
				where (bk_isbn like concat('%',#{cri.search},'%')
				or bk_title like concat('%',#{cri.search},'%')
				or bk_subtitle like concat('%',#{cri.search},'%')
				or bk_au_writer like concat('%',#{cri.search},'%')
				or bk_country like concat('%',#{cri.search},'%')
				or bk_publish like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type==1">
				where (bk_title like concat('%',#{cri.search},'%')
				or bk_subtitle like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type==2">
				where bk_au_writer like concat('%',#{cri.search},'%')
			</if>
			limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getBook" resultType="kr.green.portfolio.vo.BookVO">
		select * from book where bk_isbn = #{bk_isbn}
	</select>
	<select id="getTotalCount" resultType="int">
		select count(*) from book
	</select>
	<insert id="getBookInfo" useGeneratedKeys="true" parameterType="kr.green.portfolio.vo.BookVO" keyProperty="bk_isbn">
		insert into book(bk_isbn, bk_title, bk_subtitle, bk_au_writer, bk_publish, bk_page, bk_publish_date, bk_mainImg, bk_pu_num, bk_country)
			values(#{bk_isbn}, #{bk_title}, #{bk_subtitle}, #{bk_au_writer}, #{bk_publish}, #{bk_page}, #{bk_publish_date}, #{bk_mainImg}, #{bk_pu_num}, #{bk_country})
	</insert>
	<update id="updateBook">
		update book set 
			bk_isbn = #{bk_isbn},
			bk_title = #{bk_title},
			bk_subtitle= #{bk_subtitle},
			bk_au_writer= #{bk_au_writer},
			bk_publish = #{bk_publish},
			bk_mainImg = #{bk_mainImg},
			bk_page = #{bk_page},
			bk_publish_date = #{bk_publish_date},
			bk_pu_num = #{bk_pu_num},
			bk_country = #{bk_country}
				where bk_isbn = #{bk_isbn}
	</update>
	<insert id="regiBook">
		insert into registration(re_code, re_bk_isbn, re_title, re_price, re_amount, re_catagory, re_contents, re_choice)
			values(#{re_code}, #{re_bk_isbn}, #{re_title}, #{re_price}, #{re_amount}, #{re_catagory}, #{re_contents}, #{re_choice})
	</insert>
	<select id="regiBookList" resultType="kr.green.portfolio.vo.RegistrationVO">
		select * from registration
			<if test="cri.type==0">
				where (re_code like concat('%',#{cri.search},'%')
				or re_bk_isbn like concat('%',#{cri.search},'%')
				or re_title like concat('%',#{cri.search},'%')
				or re_price like concat('%',#{cri.search},'%')
				or re_amount like concat('%',#{cri.search},'%')
				or re_catagory like concat('%',#{cri.search},'%')
				or re_contents like concat('%',#{cri.search},'%')
				or re_choice like concat('%',#{cri.search},'%')
				)
			</if>
			<if test="cri.type==1">
				where (re_title like concat('%',#{cri.search},'%')
				or re_contents like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type==2">
				where re_catagory like concat('%',#{cri.search},'%')
			</if>
			limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getTotalCountRegi" resultType="int">
		select count(*) from registration
	</select>
	<select id="getRegiBook" resultType="kr.green.portfolio.vo.RegistrationVO">
		select * from registration where re_code = #{re_code}
	</select>
	<update id="updateRegi">
		update registration set
			re_code = #{re_code},
			re_bk_isbn = #{re_bk_isbn},
			re_title = #{re_title},
			re_price = #{re_price},
			re_amount = #{re_amount},
			re_catagory = #{re_catagory},
			re_contents = #{re_contents},
			re_choice = #{re_choice}
				where re_code = #{re_code}
	</update>
	<select id="getChoice" resultType="kr.green.portfolio.vo.BookVO">
		select book.* from registration join book on re_bk_isbn = bk_isbn and re_choice = 'Y'
	</select>
	<select id="getRegi" resultType="kr.green.portfolio.vo.RegistrationVO">
		select * from registration where re_bk_isbn = #{re_bk_isbn}
	</select>
	<select id="getRegiSale" resultType="kr.green.portfolio.vo.BookVO">
		select * from registration join book on re_bk_isbn = bk_isbn order by re_sales desc limit 0,10
	</select>
	<select id="getRegistration" resultType="kr.green.portfolio.vo.BookVO">
		select * from registration join book on re_bk_isbn = bk_isbn where re_catagory = #{re_catagory}
		<if test="cri.country == '국내/해외'">
			and (bk_country = "국내" or bk_country = "해외")
		</if>
		<if test="cri.country == '외국'">
			and bk_country = "외국"
		</if>
		<if test="cri.sort == 'basic'">
			order by re_title asc
		</if>
		<if test="cri.sort == 'popular'">
			order by re_sales desc
		</if>
		<if test="cri.sort == 'highPrice'">
			order by re_price desc
		</if>
		<if test="cri.sort == 'lowPrice'">
			order by re_price asc
		</if>
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getRegiBookList" resultType="kr.green.portfolio.vo.RegistrationVO">
		select * from registration join book on re_bk_isbn = bk_isbn where re_catagory = #{re_catagory}
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getTotalCatagory" resultType="int">
		select count(*) from registration join book on re_bk_isbn = bk_isbn
		join books on bs_bk_isbn = bk_isbn where re_catagory = #{re_catagory}
	</select>
	<select id="getBookToday" resultType="kr.green.portfolio.vo.BookVO">
		select *, re_contents as bk_contents from book join registration on bk_isbn = re_bk_isbn where re_choice = 'N' order by rand() limit 1
	</select>
	<select id="getTotalCountSearch" resultType="int">
		select count(*) from book join books on bk_isbn = bs_bk_isbn 
			join registration on bk_isbn = re_bk_isbn
	</select>
	<select id="getSearch" resultType="kr.green.portfolio.vo.BookVO">
		select *, re_contents as bk_contents, re_price as bk_price from book join registration on bk_isbn = re_bk_isbn
		where (bk_isbn like concat('%',#{cri.search},'%')
				or bk_title like concat('%',#{cri.search},'%')
				or bk_subtitle like concat('%',#{cri.search},'%')
				or bk_au_writer like concat('%',#{cri.search},'%')
				or bk_country like concat('%',#{cri.search},'%')
				or re_contents like concat('%',#{cri.search},'%')
				or bk_publish like concat('%',#{cri.search},'%'))
				<if test="cri.sort == 'basic'">
					order by re_title asc
				</if>
				<if test="cri.sort == 'popular'">
					order by re_sales desc
				</if>
				<if test="cri.sort == 'highPrice'">
					order by re_price desc
				</if>
				<if test="cri.sort == 'lowPrice'">
					order by re_price asc
				</if>
			limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
</mapper>

